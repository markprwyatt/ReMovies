{"version":3,"sources":["api/movies.js","actions/index.js","actions/types.js","components/Searchbar.js","components/Header.js","components/Sidebar.js","components/MovieCard.js","components/MovieList.js","components/pages/MovieListPage.js","components/Button.js","components/pages/MovieViewPage.js","components/history.js","components/App.js","reducers/configReducer.js","reducers/index.js","reducers/moviesReducer.js","reducers/movieReducer.js","reducers/creditsReducer.js","index.js"],"names":["axios","create","baseURL","params","api_key","init","_ref3","Object","asyncToGenerator","regenerator_default","a","mark","_callee3","dispatch","wrap","_context3","prev","next","console","log","type","_ref","_callee","response","_context","movies","get","sent","payload","data","stop","_x","apply","this","arguments","_ref2","_callee2","_context2","_x2","_x3","clearMovie","Searchbar","state","term","onSearchSubmit","e","preventDefault","_this","props","fetchMovies","_this2","react_default","createElement","className","style","margin","onSubmit","name","placeholder","autoComplete","value","onChange","setState","target","onClick","React","Component","connect","query","_ref5","_callee5","_context5","results","abrupt","_x5","Header","src_components_Searchbar","ReduxBurgerMenu","reduxBurgerMenu","Menu","genres","config","fetchMoviesByGenre","genreId","_ref7","_callee7","_context7","with_genres","_x7","isOpen","map","genre","react_router_dom","to","key","id","movie","concat","src","images","base_url","poster_path","alt","href","title","overview","vote_average","MovieList","fetchInitial","components_MovieCard","renderMovieCards","base","_ref4","_callee4","_context4","_x4","MovieListPage","useEffect","Scroll","scrollToTop","components_MovieList","StyledButton","styled","button","_templateObject","Button","text","handleClick","MoviePageWrapper","div","MovieViewPage_templateObject","TitleWrapper","_templateObject2","SubInfoWrapper","_templateObject3","ImageWrapper","_templateObject4","H1","h1","_templateObject5","P","p","_templateObject6","H3","h3","_templateObject7","Image","img","_templateObject8","fetchMovie","_ref6","_callee6","_context6","_x6","getCredits","_ref8","_callee8","_context8","cast","_x8","history","match","poster_sizes","release_date","slice","tagline","components_Button","goBack","createBrowserHistory","theme","primary","secondary","font","fontColor","Div","App_templateObject","App","styled_components_browser_esm","react_router","src_components_Sidebar","components_Header","path","exact","component","MovieViewPage","INITIAL_STATE","loading","combineReducers","length","undefined","action","toConsumableArray","objectSpread","credits","burgerMenu","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","components_App","document","querySelector"],"mappings":"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","file":"static/js/main.0c9c5251.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.themoviedb.org/3\",\n  params: {\n    api_key: \"a2986eaf427243d1e89aafc1fc124089\"\n  }\n});\n","import movies from \"../api/movies\";\nimport {\n  FETCH_MOVIES,\n  FETCH_MOVIE,\n  FETCH_INITIAL,\n  GET_CONFIG,\n  GET_GENRES,\n  SET_LOADING,\n  REMOVE_LOADING,\n  FETCH_MOVIES_BY_GENRE,\n  CLEAR_MOVIE,\n  GET_CREDITS\n} from \"./types\";\n\nconst api_key = \"?api_key=a2986eaf427243d1e89aafc1fc124089\";\n\n// action creator to get config from api\n\nexport const getConfig = () => async dispatch => {\n  const response = await movies.get(\"/configuration\" + api_key);\n  dispatch({\n    type: GET_CONFIG,\n    payload: response.data\n  });\n};\n\n// get genres from api\n\nexport const getGenres = () => async dispatch => {\n  const response = await movies.get(\"/genre/movie/list\" + api_key);\n  dispatch({\n    type: GET_GENRES,\n    payload: response.data\n  });\n};\n\n// init app\nexport const init = () => async dispatch => {\n  console.log(\"init\");\n  dispatch({ type: SET_LOADING });\n  await dispatch(getConfig());\n  await dispatch(getGenres());\n  dispatch({ type: REMOVE_LOADING });\n};\n\n// fetch trending movies when app movie list loads\nexport const fetchInitial = () => async dispatch => {\n  const response = await movies.get(\"/trending/movie/week\" + api_key);\n  dispatch({\n    type: FETCH_INITIAL,\n    payload: response.data.results\n  });\n};\n\n// search for movies from api\n\nexport const fetchMovies = query => async dispatch => {\n  if (query) {\n    const response = await movies.get(`/search/movie` + api_key, {\n      params: {\n        query\n      }\n    });\n    dispatch({\n      type: FETCH_MOVIES,\n      payload: response.data.results\n    });\n  } else {\n    return null;\n  }\n};\n\n// fetch movie by id for movie view page\n\nexport const fetchMovie = id => async dispatch => {\n  console.log(\"getting movie\");\n  const response = await movies.get(`/movie/${id}` + api_key);\n  dispatch({\n    type: FETCH_MOVIE,\n    payload: response.data\n  });\n};\n\n// Search movies by genre ID\n\nexport const fetchMoviesByGenre = genreId => async dispatch => {\n  const response = await movies.get(\"/discover/movie\" + api_key, {\n    params: {\n      with_genres: genreId\n    }\n  });\n  dispatch({\n    type: FETCH_MOVIES_BY_GENRE,\n    payload: response.data.results\n  });\n};\n\n// clear movie for ffresh page\n\nexport const clearMovie = () => {\n  return {\n    type: CLEAR_MOVIE\n  };\n};\n\n// get credits for moive\n\nexport const getCredits = id => async dispatch => {\n  const response = await movies.get(`/movie/${id}/credits` + api_key);\n  console.log(response.data.cast);\n  dispatch({\n    type: GET_CREDITS,\n    payload: response.data.cast\n  });\n};\n","export const GET_CONFIG = \"GET_CONFIG\";\nexport const GET_GENRES = \"GET_GENRES\";\n\nexport const FETCH_MOVIES = \"FETCH_MOVIES\";\nexport const FETCH_MOVIE = \"FETCH_MOVIE\";\nexport const FETCH_INITIAL = \"FETCH_INITIAL\";\nexport const FETCH_MOVIES_BY_GENRE = \"FETCH_MOVIES_BY_GENRE\";\nexport const GET_CREDITS = \"GET_CREDITS\";\n\nexport const SET_LOADING = \"SET_LOADING\";\nexport const REMOVE_LOADING = \"REMOVE_LOADING\";\n\nexport const CLEAR_MOVIE = \"CLEAR_MOVIE\";\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchMovies } from \"../actions\";\nimport \"./Searchbar.css\";\n\nclass Searchbar extends React.Component {\n  state = { term: \"\" };\n\n  onSearchSubmit = e => {\n    e.preventDefault();\n    this.props.fetchMovies(this.state.term);\n  };\n\n  render() {\n    return (\n      <div className=\"search-form\">\n        <form\n          className=\"ui icon input\"\n          style={{ margin: \"1rem 2rem\" }}\n          onSubmit={this.onSearchSubmit}>\n          <input\n            type=\"text\"\n            name=\"movie\"\n            placeholder=\"Search...\"\n            autoComplete=\"off\"\n            value={this.state.term}\n            onChange={e => this.setState({ term: e.target.value })}\n          />\n          <i className=\"search link icon\" onClick={this.onSearchSubmit} />\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movies\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchMovies\n  }\n)(Searchbar);\n","import React from \"react\";\nimport Searchbar from \"./Searchbar\";\n\n\nconst Header = () => {\n  return <Searchbar />;\n};\n\nexport default Header;\n","import React from \"react\";\nimport \"./Sidebar.css\";\nimport { slide as Menu } from \"react-burger-menu\";\nimport { decorator as reduxBurgerMenu } from \"redux-burger-menu\";\nimport { connect } from \"react-redux\";\nimport { fetchMoviesByGenre } from \"../actions/index\";\nimport { Link } from \"react-router-dom\";\n\nconst ReduxBurgerMenu = reduxBurgerMenu(Menu);\n\nconst Sidebar = props => {\n  const selectGenre = (e, genreId) => {\n    props.fetchMoviesByGenre(genreId);\n    console.log(\"Worked\");\n  };\n\n  //\n\n  if (props.genres) {\n    return (\n      <ReduxBurgerMenu isOpen={props.isOpen} className=\"sidebar\">\n        {props.genres.map(genre => {\n          return (\n            <Link to=\"/genres\" className=\"menu-item\" key={genre.id}>\n              <span onClick={e => selectGenre(e, genre.id)}>{genre.name}</span>\n            </Link>\n          );\n        })}\n      </ReduxBurgerMenu>\n    );\n  } else {\n    return <ReduxBurgerMenu />;\n  }\n};\n\nconst mapStateToProps = ({ config }) => {\n  return {\n    genres: config.genres\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchMoviesByGenre\n  }\n)(Sidebar);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nconst MovieCard = ({ movie, baseURL }) => {\n  if (movie) {\n    return (\n      <Link to={`/movie/${movie.id}`} className=\"card\">\n        <div className=\"image\">\n          <img\n            src={`${baseURL.images.base_url}/w500${movie.poster_path}`}\n            alt=\"Movie Poster\"\n          />\n        </div>\n        <div className=\"content\">\n          <div href=\"/\" className=\"header\">\n            {movie.title}\n          </div>\n          <div className=\"description\">{movie.overview}</div>\n        </div>\n        <div className=\"extra content\">\n          <div href=\"/\">\n            <i className=\"star icon\" />\n            {movie.vote_average}\n          </div>\n        </div>\n      </Link>\n    );\n  }\n};\n\nconst mapStateToProps = ({ movies }) => {\n  return {\n    movies\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(MovieCard);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { fetchInitial, init } from \"../actions\";\nimport MovieCard from \"./MovieCard\";\n\nclass MovieList extends Component {\n  componentDidMount() {\n    this.props.fetchInitial();\n    this.props.init();\n  }\n\n  renderMovieCards() {\n    if (this.props.baseURL && this.props.baseURL.images)\n      return this.props.movies.map(movie => (\n        <MovieCard baseURL={this.props.baseURL} key={movie.id} movie={movie} />\n      ));\n  }\n\n  render() {\n    if (this.props.movies) {\n      return <div className=\"ui link cards\">{this.renderMovieCards()}</div>;\n    }\n\n    return <div>Loading...</div>;\n  }\n}\n\nconst mapStateToProps = ({ movies, config }) => {\n  return {\n    movies: movies,\n    baseURL: config.base,\n    genres: config.genres\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  {\n    fetchInitial,\n    init\n  }\n)(MovieList);\n","import React, { useEffect } from \"react\";\nimport * as Scroll from \"react-scroll\";\n\nimport MovieList from \"../MovieList\";\n\nconst MovieListPage = () => {\n  useEffect(() => {\n    Scroll.animateScroll.scrollToTop(500);\n  }, []);\n  return (\n    <div className=\"ui segment\">\n      <MovieList />\n    </div>\n  );\n};\n\nexport default MovieListPage;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledButton = styled.button`\n  border-radius: 5px;\n  padding: 1rem;\n  margin: 1rem;\n  width: 7rem;\n  font-size: 1.3rem;\n\n  &:hover {\n    background-color: #373a47;\n    color: #fff;\n    cursor: pointer;\n  }\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = ({ text, handleClick }) => {\n  return <StyledButton onClick={handleClick}>{text}</StyledButton>;\n};\n\nexport default Button;\n","import React, { useEffect } from \"react\";\nimport * as Scroll from \"react-scroll\";\nimport { fetchMovie, init, clearMovie, getCredits } from \"../../actions/index\";\nimport Button from \"../Button\";\nimport { connect } from \"react-redux\";\nimport styled from \"styled-components\";\n\nconst MoviePageWrapper = styled.div`\n  display: flex;\n  align-content: center;\n`;\nconst TitleWrapper = styled.div`\n  display: flex;\n  margin: 1rem;\n  flex-direction: column;\n`;\n\nconst SubInfoWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst ImageWrapper = styled.div`\n  max-width: 40%;\n  padding: 1.5rem;\n  width: 100%;\n`;\n\nconst H1 = styled.h1`\n  font-size: 3.5rem;\n  font-weight: 400;\n`;\n\nconst P = styled.p`\n  font-size: 1.3rem;\n`;\n\nconst H3 = styled.h3`\n  font-size: 1.7rem;\n  font-weight: 600;\n`;\n\nconst Image = styled.img`\n  max-height: 100%;\n  max-width: 100%;\n  padding: 0;\n  margin: 0;\n  object-fit: cover;\n  height: auto;\n  border-radius: 5px;\n  box-shadow: 0 1rem 2rem black;\n`;\n\nconst MovieViewPage = ({\n  config,\n  fetchMovie,\n  init,\n  getCredits,\n  history,\n  match,\n  movie\n}) => {\n  useEffect(() => {\n    clearMovie();\n    init();\n    fetchMovie(match.params.id);\n    getCredits(match.params.id);\n    Scroll.animateScroll.scrollToTop(500);\n  }, [match.params.id]);\n\n  if (config.base && movie.title) {\n    return (\n      <MoviePageWrapper>\n        <ImageWrapper>\n          <Image\n            src={`${config.base.images.base_url}/${\n              config.base.images.poster_sizes[5]\n            }${movie.poster_path}`}\n            alt=\"movie poster\"\n          />\n        </ImageWrapper>\n        <TitleWrapper>\n          <H1>{movie.title}</H1>\n          <SubInfoWrapper>\n            <p>Released {movie.release_date.slice(0, 4)}</p>\n            <p>\n              {movie.genres.map(genre => (\n                <span key={genre.id}>{genre.name + \" \"}</span>\n              ))}\n            </p>\n          </SubInfoWrapper>\n          <p>{movie.vote_average}</p>\n          <div>\n            <H3>{movie.tagline}</H3>\n            <P>{movie.overview}</P>\n          </div>\n          <Button text=\"Back\" handleClick={() => history.goBack()} />\n        </TitleWrapper>\n      </MoviePageWrapper>\n    );\n  }\n\n  return <div>Loading...</div>;\n};\n\nconst mapStateToProps = ({ movie, config }) => {\n  return {\n    movie,\n    config\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  { fetchMovie, init, clearMovie, getCredits }\n)(MovieViewPage);\n","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./Header\";\nimport Sidebar from \"./Sidebar\";\nimport MovieListPage from \"./pages/MovieListPage\";\nimport MovieViewPage from \"./pages/MovieViewPage\";\nimport history from \"./history\";\nimport { ThemeProvider } from \"styled-components\";\nimport styled from 'styled-components';\n\nconst theme = {\n  primary: \"#373a47\",\n  secondary: \"greenyellow\",\n  font: \"sans-seriff\",\n  fontColor: \"#d1d1d1\"\n};\n\n\n\n\nconst Div = styled.div`\n  position: sticky;\n  top: 0px;\n  z-index: 1000;\n`\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router history={history}>\n        <Sidebar />\n        <Div>\n        <Header />\n        </Div>\n        <Switch>\n          <Route path=\"/\" exact component={MovieListPage} />\n          <Route path=\"/movie/:id\"  component={MovieViewPage} />\n          <Route path=\"/genres\" component={MovieListPage} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n\n/*  */\n","import {\n  GET_CONFIG,\n  GET_GENRES,\n  SET_LOADING,\n  REMOVE_LOADING\n} from \"../actions/types\";\n\nconst INITIAL_STATE = {\n  loading: true\n};\n\nexport default (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case GET_CONFIG:\n      return { ...state, base: action.payload };\n    case GET_GENRES:\n      return { ...state, ...action.payload };\n    case SET_LOADING:\n      return { ...state, loading: true };\n    case REMOVE_LOADING:\n      return { ...state, loading: false };\n    default:\n      return state;\n  }\n};\n","import configReducer from \"./configReducer\";\nimport moviesReducer from \"./moviesReducer\";\nimport movieReducer from \"./movieReducer\";\nimport { combineReducers } from \"redux\";\nimport { reducer as burgerMenu } from \"redux-burger-menu\";\nimport creditsReducer from \"./creditsReducer\";\n\nexport default combineReducers({\n  movies: moviesReducer,\n  movie: movieReducer,\n  credits: creditsReducer,\n  config: configReducer,\n  burgerMenu\n});\n","import {\n  FETCH_MOVIES,\n  FETCH_INITIAL,\n  FETCH_MOVIES_BY_GENRE\n} from \"../actions/types\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case FETCH_INITIAL:\n      return [...action.payload];\n    case FETCH_MOVIES:\n      return [...action.payload];\n    case FETCH_MOVIES_BY_GENRE:\n      return [...action.payload];\n    default:\n      return state;\n  }\n};\n","import { FETCH_MOVIE, CLEAR_MOVIE } from \"../actions/types.js\";\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case FETCH_MOVIE:\n      return { ...action.payload };\n    case CLEAR_MOVIE:\n      return {};\n    default:\n      return state;\n  }\n};\n","import { GET_CREDITS, CLEAR_MOVIE } from \"../actions/types.js\";\n\nexport default (state = [], action) => {\n  switch (action.type) {\n    case GET_CREDITS:\n      return [...action.payload];\n    case CLEAR_MOVIE:\n      return [];\n    default:\n      return state;\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport reduxThunk from 'redux-thunk';\n\nimport App from './components/App';\nimport reducers from './reducers';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(reducers,\n    composeEnhancers(applyMiddleware(reduxThunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    </Provider>,\n document.querySelector('#root'));"],"sourceRoot":""}